{"ast":null,"code":"var _jsxFileName = \"C:\\\\software\\\\Frontend Mentor\\\\hangman-ts\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Importing React and hooks from the React library\n\nimport { CategorySelection, HangmanDisplay, HealthBar, Keyboard, Toggle, logo, playButton, backButton } from './imports';\n// Importing components, images, and data from a separate imports file\n\nimport { selectCategory, handleGuess, goToHome, changeCategory, continueGame, quitGame, playAgain } from './functions';\n// Importing game-related functions from a separate functions file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Using the useState hook to create state variables with their initial values\n  const [page, setPage] = useState('home');\n  const [category, setCategory] = useState('');\n  const [word, setWord] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [health, setHealth] = useState(100);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [lostWord, setLostWord] = useState('');\n  const [hasWon, setHasWon] = useState(false);\n\n  // Using the useEffect hook to check if the user has won the game whenever guessedLetters or word changes\n  useEffect(() => {\n    if (word && word.split('').every(letter => letter === ' ' || guessedLetters.includes(letter))) {\n      setHasWon(true);\n    }\n  }, [guessedLetters, word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: page === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"homepage-logo\",\n          src: logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"homepage-button\",\n          onClick: () => setPage('category'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: playButton,\n            alt: \"Play Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : page === 'category' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"category-buttons\",\n          onClick: () => goToHome(setPage, setMenuOpen, setGameOver, setHasWon),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"category-back-button\",\n            src: backButton,\n            alt: \"Back Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CategorySelection, {\n        selectCategory: category => selectCategory(category, setCategory, setWord, setGuessedLetters, setHealth, setPage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"in-game-container\",\n      children: [gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You've Lost!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Incorrect word: \", lostWord]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => playAgain(setWord, setGuessedLetters, setHealth, setGameOver, setHasWon, setPage),\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => quitGame(setPage, setMenuOpen, setGameOver, setHasWon),\n              children: \"Quit Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), hasWon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You've Won!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Correct word: \", word]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => playAgain(setWord, setGuessedLetters, setHealth, setGameOver, setHasWon, setPage),\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => quitGame(setPage, setMenuOpen, setGameOver, setHasWon),\n              children: \"Quit Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"in-game-buttons-and-health\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"in-game-header\",\n          children: [/*#__PURE__*/_jsxDEV(Toggle, {\n            onContinue: () => continueGame(setMenuOpen),\n            newCategory: () => changeCategory(setPage, setMenuOpen, setGameOver, setHasWon),\n            quitGame: () => quitGame(setPage, setMenuOpen, setGameOver, setHasWon),\n            menuOpen: menuOpen,\n            setMenuOpen: setMenuOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-display\",\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HealthBar, {\n          health: health\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hangman-and-keyboard\",\n        children: [/*#__PURE__*/_jsxDEV(HangmanDisplay, {\n          word: word,\n          guessedLetters: guessedLetters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n          guessedLetters: guessedLetters,\n          handleGuess: letter => handleGuess(letter, guessedLetters, setGuessedLetters, word, health, setHealth, setGameOver, setLostWord)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wcWXfJN3FMw9rBE1ml4Ooiaj+GY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CategorySelection","HangmanDisplay","HealthBar","Keyboard","Toggle","logo","playButton","backButton","selectCategory","handleGuess","goToHome","changeCategory","continueGame","quitGame","playAgain","jsxDEV","_jsxDEV","App","_s","page","setPage","category","setCategory","word","setWord","guessedLetters","setGuessedLetters","health","setHealth","menuOpen","setMenuOpen","gameOver","setGameOver","lostWord","setLostWord","hasWon","setHasWon","split","every","letter","includes","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onContinue","newCategory","_c","$RefreshReg$"],"sources":["C:/software/Frontend Mentor/hangman-ts/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Importing React and hooks from the React library\n\nimport {\n  Words,\n  CategorySelection,\n  HangmanDisplay,\n  HealthBar,\n  Keyboard,\n  Toggle,\n  logo,\n  playButton,\n  backButton,\n} from './imports';\n// Importing components, images, and data from a separate imports file\n\nimport {\n  selectCategory,\n  handleGuess,\n  goToHome,\n  changeCategory,\n  continueGame,\n  quitGame,\n  playAgain,\n} from './functions';\n// Importing game-related functions from a separate functions file\n\nconst App: React.FC = () => {\n  // Using the useState hook to create state variables with their initial values\n  const [page, setPage] = useState<string>('home');\n  const [category, setCategory] = useState<string>('');\n  const [word, setWord] = useState<string>('');\n  const [guessedLetters, setGuessedLetters] = useState<string[]>([]);\n  const [health, setHealth] = useState<number>(100);\n  const [menuOpen, setMenuOpen] = useState<boolean>(false);\n  const [gameOver, setGameOver] = useState<boolean>(false);\n  const [lostWord, setLostWord] = useState<string>('');\n  const [hasWon, setHasWon] = useState<boolean>(false);\n\n  // Using the useEffect hook to check if the user has won the game whenever guessedLetters or word changes\n  useEffect(() => {\n    if (word && word.split('').every((letter) => letter === ' ' || guessedLetters.includes(letter))) {\n      setHasWon(true);\n    }\n  }, [guessedLetters, word]);\n\n  return (\n    <div className=\"container\">\n      {/* Conditional rendering based on the current page state */}\n      {page === 'home' ? (\n        <div className=\"homepage-container\">\n          <div className=\"homepage\">\n            <img className=\"homepage-logo\" src={logo} alt=\"\" />\n            {/* Button to navigate to the category selection page */}\n            <button className=\"homepage-button\" onClick={() => setPage('category')}>\n              <img src={playButton} alt=\"Play Button\" />\n            </button>\n          </div>\n        </div>\n      ) : page === 'category' ? (\n        <div className=\"category-container\">\n          <div className=\"category-header\">\n            {/* Button to go back to the home page */}\n            <button className=\"category-buttons\" onClick={() => goToHome(setPage, setMenuOpen, setGameOver, setHasWon)}>\n              <img className=\"category-back-button\" src={backButton} alt=\"Back Button\" />\n            </button>\n            <h1>Select Category</h1>\n          </div>\n          {/* Category selection component */}\n          <CategorySelection selectCategory={(category) => selectCategory(category, setCategory, setWord, setGuessedLetters, setHealth, setPage)} />\n        </div>\n      ) : (\n        <div className=\"in-game-container\">\n          {/* Popup for game over */}\n          {gameOver && (\n            <div className=\"popup-container\">\n              <div className=\"popup\">\n                <h2>You've Lost!</h2>\n                <p>Incorrect word: {lostWord}</p>\n                <div className=\"popup-buttons\">\n                  {/* Button to play again */}\n                  <button onClick={() => playAgain(setWord, setGuessedLetters, setHealth, setGameOver, setHasWon, setPage)}>Play Again</button>\n                  {/* Button to quit the game */}\n                  <button onClick={() => quitGame(setPage, setMenuOpen, setGameOver, setHasWon)}>Quit Game</button>\n                </div>\n              </div>\n            </div>\n          )}\n          {/* Popup for winning the game */}\n          {hasWon && (\n            <div className=\"popup-container\">\n              <div className=\"popup\">\n                <h2>You've Won!</h2>\n                <p>Correct word: {word}</p>\n                <div className=\"popup-buttons\">\n                  {/* Button to play again */}\n                  <button onClick={() => playAgain(setWord, setGuessedLetters, setHealth, setGameOver, setHasWon, setPage)}>Play Again</button>\n                  {/* Button to quit the game */}\n                  <button onClick={() => quitGame(setPage, setMenuOpen, setGameOver, setHasWon)}>Quit Game</button>\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\"in-game-buttons-and-health\">\n            <div className=\"in-game-header\">\n              {/* Toggle menu component */}\n              <Toggle\n                onContinue={() => continueGame(setMenuOpen)}\n                newCategory={() => changeCategory(setPage, setMenuOpen, setGameOver, setHasWon)}\n                quitGame={() => quitGame(setPage, setMenuOpen, setGameOver, setHasWon)}\n                menuOpen={menuOpen}\n                setMenuOpen={setMenuOpen}\n              />\n              <div className=\"category-display\">{category}</div>\n            </div>\n            {/* Health bar component */}\n            <HealthBar health={health} />\n          </div>\n          <div className=\"hangman-and-keyboard\">\n            {/* Hangman display component */}\n            <HangmanDisplay word={word} guessedLetters={guessedLetters} />\n            {/* Keyboard component */}\n            <Keyboard guessedLetters={guessedLetters} handleGuess={(letter) => handleGuess(letter, guessedLetters, setGuessedLetters, word, health, setHealth, setGameOver, setLostWord)} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}