{"ast":null,"code":"var _jsxFileName = \"C:\\\\software\\\\Frontend Mentor\\\\hangman-ts\\\\src\\\\components\\\\Keyboard.tsx\";\nimport React from 'react'; // Import React\nimport '../css/Keyboard.css'; // Import CSS file for styling\n\n// Define the props interface to specify the types of props this component accepts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Define the functional component with React.FC type, which includes props typing\nconst Keyboard = ({\n  guessedLetters,\n  handleGuess\n}) => {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split(''); // Create an array of the alphabet letters\n\n  // Return the JSX to render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: alphabet.map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      // Use the letter as the key for each button\n      onClick: () => handleGuess(letter) // Call handleGuess with the current letter when button is clicked\n      ,\n      disabled: guessedLetters.includes(letter) // Disable the button if the letter has been guessed\n      ,\n      className: \"keyboard-buttons\" // Apply CSS class to the button\n      ,\n      style: {\n        opacity: guessedLetters.includes(letter) ? 0.5 : 1\n      } // Set the opacity based on whether the letter has been guessed\n      ,\n      children: [letter, \" \"]\n    }, letter, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n// Export the component as the default export\n_c = Keyboard;\nexport default Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Keyboard","guessedLetters","handleGuess","alphabet","split","className","children","map","letter","onClick","disabled","includes","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/software/Frontend Mentor/hangman-ts/src/components/Keyboard.tsx"],"sourcesContent":["import React from 'react'; // Import React\r\nimport '../css/Keyboard.css'; // Import CSS file for styling\r\n\r\n// Define the props interface to specify the types of props this component accepts\r\ninterface KeyboardProps {\r\n    guessedLetters: string[]; // guessedLetters is an array of strings\r\n    handleGuess: (letter: string) => void; // handleGuess is a function that takes a string and returns void\r\n}\r\n\r\n// Define the functional component with React.FC type, which includes props typing\r\nconst Keyboard: React.FC<KeyboardProps> = ({ guessedLetters, handleGuess }) => {\r\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split(''); // Create an array of the alphabet letters\r\n\r\n    // Return the JSX to render the component\r\n    return (\r\n        <div className='keyboard'>\r\n            {alphabet.map((letter) => (\r\n                <button\r\n                    key={letter} // Use the letter as the key for each button\r\n                    onClick={() => handleGuess(letter)} // Call handleGuess with the current letter when button is clicked\r\n                    disabled={guessedLetters.includes(letter)} // Disable the button if the letter has been guessed\r\n                    className='keyboard-buttons' // Apply CSS class to the button\r\n                    style={{ opacity: guessedLetters.includes(letter) ? 0.5 : 1 }} // Set the opacity based on whether the letter has been guessed\r\n                >\r\n                    {letter} {/* Display the letter inside the button */}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Export the component as the default export\r\nexport default Keyboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,qBAAqB,CAAC,CAAC;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAY,CAAC,KAAK;EAC3E,MAAMC,QAAQ,GAAG,4BAA4B,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEzD;EACA,oBACIL,OAAA;IAAKM,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBH,QAAQ,CAACI,GAAG,CAAEC,MAAM,iBACjBT,OAAA;MACiB;MACbU,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAACM,MAAM,CAAE,CAAC;MAAA;MACpCE,QAAQ,EAAET,cAAc,CAACU,QAAQ,CAACH,MAAM,CAAE,CAAC;MAAA;MAC3CH,SAAS,EAAC,kBAAkB,CAAC;MAAA;MAC7BO,KAAK,EAAE;QAAEC,OAAO,EAAEZ,cAAc,CAACU,QAAQ,CAACH,MAAM,CAAC,GAAG,GAAG,GAAG;MAAE,CAAE,CAAC;MAAA;MAAAF,QAAA,GAE9DE,MAAM,EAAC,GAAC;IAAA,GANJA,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOP,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;;AAED;AAAAC,EAAA,GArBMlB,QAAiC;AAsBvC,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}